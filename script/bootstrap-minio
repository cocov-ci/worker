#!/bin/bash -x

set -e

if [[ -n "$1" ]]; then
  minio_container_name="$1"
else
  minio_container_name="$(docker compose ps | sed -n 2p | cut -d" " -f1)"
fi

echo "container name is $minio_container_name"

if [[ -z "$minio_container_name" ]]; then
  echo "Could not find a minio container. Please provide its name or start via docker compose up -d"
  exit 1
fi

container_status="$(docker inspect "$minio_container_name" -f '{{.State.Status}}')"
if [[ "$container_status" != "running" ]]; then
  echo "$minio_container_name is not running (status is $container_status)"
  exit 1
fi

format='{{range $net,$v := .NetworkSettings.Networks}}{{printf "%s\n" $net}}{{end}}'
network_name="$(docker inspect "$minio_container_name" -f "$format" | head -n1)"

if [[ "$network_name" == "bridge" ]] || [[ "$network_name" == "host" ]]; then
  network_name="default";
fi

docker_args=(
"--rm"
"--link" "$minio_container_name:minio"
"--entrypoint" "sh"
"-v" "$(pwd)/storage/fixtures/fake-s3:/intake"
)

if [[ "$network_name" != "default" ]]; then
  docker_args+=("--network" "$network_name");
fi


docker run "${docker_args[@]}" minio/mc -c "\
  while ! curl http://minio:9000; do echo 'Waiting minio to startup...' && sleep 0.1; done; \
  sleep 1 && \
  mc config host add myminio http://minio:9000 minioadmin minioadmin && \
  mc rm -r --force myminio/cocov-storage || true && \
  mc mb myminio/cocov-storage || true && \
  mc cp --recursive /intake/ myminio/cocov-storage \
"
